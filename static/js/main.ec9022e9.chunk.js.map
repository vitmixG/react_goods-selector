{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","item","this","setState","className","Button","type","variant","color","onClick","clearSelected","goodsFromServer","map","good","isSelected","includes","classNames","addSelected","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCCWA,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,iDAKE,SAAYC,GACVC,KAAKC,SAAS,CAAEH,aAAcC,MANlC,2BASE,WACEC,KAAKC,SAAS,CAAEH,aAAc,OAVlC,oBAaE,WAAU,IAAD,OACCA,EAAiBE,KAAKH,MAAtBC,aAER,OACE,uBAAMI,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACKJ,EAAD,UAEKA,EAFL,gBACE,sBAGLA,GAEG,cAACK,EAAA,EAAD,CACEC,KAAK,SACLF,UAAU,aACVG,QAAQ,YACRC,MAAM,YACNC,QAAS,WACP,EAAKC,iBANT,sBAcN,6BACGC,EAAgBC,KAAI,SAAAC,GACnB,IAAMC,EAAad,EAAae,SAASF,GAEzC,OACE,qBAEET,UAAWY,IAAW,OACpB,CAAE,eAAgBF,IAHtB,UAKGD,EACCC,EAeE,cAACT,EAAA,EAAD,CACEC,KAAK,SACLF,UAAU,eACVG,QAAQ,YACRC,MAAM,QACNC,QAAS,WACP,EAAKC,iBANT,oBAbA,cAACL,EAAA,EAAD,CACEC,KAAK,SACLF,UAAU,eACVG,QAAQ,YACRC,MAAM,UACNC,QAAS,WACP,EAAKQ,YAAYJ,IANrB,sBAPCA,eA9CrB,GAAyBK,aCRzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec9022e9.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport './App.scss';\nimport Button from '@mui/material/Button';\nimport classNames from 'classnames';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  addSelected(item:string) {\n    this.setState({ selectedGood: item });\n  }\n\n  clearSelected() {\n    this.setState({ selectedGood: '' });\n  }\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            { !selectedGood\n              ? 'No goods selected'\n              : `${selectedGood} is selected`}\n          </h1>\n          {selectedGood\n            && (\n              <Button\n                type=\"button\"\n                className=\"App__clear\"\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  this.clearSelected();\n                }}\n              >\n                Clear\n              </Button>\n            )}\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGood.includes(good);\n\n            return (\n              <li\n                key={good}\n                className={classNames('Good',\n                  { 'Good--active': isSelected })}\n              >\n                {good}\n                {!isSelected\n                  ? (\n                    <Button\n                      type=\"button\"\n                      className=\"Good__select\"\n                      variant=\"contained\"\n                      color=\"success\"\n                      onClick={() => {\n                        this.addSelected(good);\n                      }}\n                    >\n                      Select\n                    </Button>\n                  )\n                  : (\n                    <Button\n                      type=\"button\"\n                      className=\"Good__remove\"\n                      variant=\"contained\"\n                      color=\"error\"\n                      onClick={() => {\n                        this.clearSelected();\n                      }}\n                    >\n                      Remove\n                    </Button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}